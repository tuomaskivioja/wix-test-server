{"version":3,"names":["_CursorBasedIterator","require","_OffsetBasedIterator","_PlatformizedQueryBuilder","_motionEdmAutogenCommon","_motionEdmAutogenTransformationsCore","ITEMS_RESULT_PROPERTY_NAME","PAGING_METADATA_RESULT_PROPERTY_NAME","preset","query","PagingMethods","constants","DEFAULT_LIMIT","PlatformizedQueryMethodWrapper","PlatformizedQueryBuilder","constructor","obj","func","requestTransformer","responseTransformer","errorTransformer","pagingMethod","cursor","builderOptions","find","options","_pagingMetadata$curso3","_pagingMetadata$curso4","_buildQuery","request","response","items","pagingMetadata","Offset","OffsetBasedIterator","fetchNextPage","_copyWithNextPage","fetchPrevPage","_copyWithPrevPage","offset","_pagingOffset","limit","_pagingLimit","totalCount","total","tooManyToCount","originQuery","CursorBasedIterator","_pagingMetadata$curso","_copyWithCursor","cursors","next","_pagingMetadata$curso2","prev","prevCursor","nextCursor","error","skipTo","queryObject","build","Cursor","_this$builderOptions","cursorWithEmptyFilterAndSort","cursorPaging","filter","sort","paging","undefined","_copyWithOffsetChange","amount","nextPage","exports","wrapWithQueryBuilder","transformationPaths"],"sources":["../../src/wrapWithQueryBuilder.ts"],"sourcesContent":["import { CursorBasedIterator } from './CursorBasedIterator';\nimport { OffsetBasedIterator } from './OffsetBasedIterator';\nimport { PlatformizedQueryBuilder } from './PlatformizedQueryBuilder';\nimport { constants } from '@wix/motion-edm-autogen-common';\nimport { preset } from '@wix/motion-edm-autogen-transformations-core';\n\nconst { ITEMS_RESULT_PROPERTY_NAME, PAGING_METADATA_RESULT_PROPERTY_NAME } =\n  preset.query;\nconst { PagingMethods } = constants;\n\nconst DEFAULT_LIMIT = 50;\n\nclass PlatformizedQueryMethodWrapper extends PlatformizedQueryBuilder {\n  constructor(obj) {\n    super(obj);\n    // Private variables cannot be prefixed with '_' here.\n    // That's because the filterMixin used by PlatformizedQueryBuilder copies its properties from \"this\"\n    // and passes them to the new instance ctor, that expects names without the '_' prefix.\n    // Changing this breaks the chaining capability.\n    this.func = obj.func;\n    this.requestTransformer = obj.requestTransformer;\n    this.responseTransformer = obj.responseTransformer;\n    this.errorTransformer = obj.errorTransformer;\n    this.pagingMethod = obj.pagingMethod;\n    this.cursor = obj.cursor;\n    this.builderOptions = obj.builderOptions;\n  }\n\n  async find(options = {}) {\n    try {\n      const query = this._buildQuery();\n      const request = this.requestTransformer(query, options);\n      const response = await this.func(request, {\n        ...options,\n        ...this.builderOptions,\n      });\n\n      const {\n        [ITEMS_RESULT_PROPERTY_NAME]: items,\n        [PAGING_METADATA_RESULT_PROPERTY_NAME]: pagingMetadata,\n      } = this.responseTransformer(response);\n\n      if (this.pagingMethod === PagingMethods.Offset) {\n        return new OffsetBasedIterator({\n          items,\n          fetchNextPage: () => this._copyWithNextPage().find(options),\n          fetchPrevPage: () => this._copyWithPrevPage().find(options),\n          offset: this._pagingOffset,\n          limit: this._pagingLimit,\n          totalCount: pagingMetadata?.total,\n          tooManyToCount: pagingMetadata?.tooManyToCount,\n          originQuery: this,\n        });\n      }\n\n      return new CursorBasedIterator({\n        items,\n        limit: this._pagingLimit,\n        originQuery: this,\n        fetchNextPage: () =>\n          this._copyWithCursor(pagingMetadata?.cursors?.next ?? '').find(\n            options,\n          ),\n        fetchPrevPage: () =>\n          this._copyWithCursor(pagingMetadata?.cursors?.prev ?? '').find(\n            options,\n          ),\n        prevCursor: pagingMetadata?.cursors?.prev ?? '',\n        nextCursor: pagingMetadata?.cursors?.next ?? '',\n      });\n    } catch (error) {\n      return this.errorTransformer(error);\n    }\n  }\n\n  skipTo(cursor) {\n    return this._copyWithCursor(cursor);\n  }\n\n  _copyWithCursor(cursor) {\n    return new PlatformizedQueryMethodWrapper({ ...this, cursor });\n  }\n\n  _buildQuery() {\n    const queryObject = this.build();\n\n    if (this.pagingMethod === PagingMethods.Cursor) {\n      if (this.builderOptions?.cursorWithEmptyFilterAndSort && this.cursor) {\n        return {\n          cursorPaging: { cursor: this.cursor, limit: this._pagingLimit },\n        };\n      }\n\n      return {\n        filter: queryObject.filter,\n        sort: this.sort,\n        cursorPaging: { cursor: this.cursor, limit: this._pagingLimit },\n      };\n    }\n\n    return {\n      filter: queryObject.filter,\n      sort: this.sort,\n      paging: { limit: this._pagingLimit, offset: this._pagingOffset },\n    };\n  }\n\n  get _pagingOffset() {\n    return this.paging.offset || 0;\n  }\n\n  get _pagingLimit() {\n    return this.paging.limit === undefined ? DEFAULT_LIMIT : this.paging.limit;\n  }\n\n  _copyWithOffsetChange(amount) {\n    const nextPage = {\n      offset: this._pagingOffset + amount,\n      limit: this._pagingLimit,\n    };\n\n    return new PlatformizedQueryMethodWrapper({ ...this, paging: nextPage });\n  }\n\n  _copyWithNextPage() {\n    return this._copyWithOffsetChange(this._pagingLimit);\n  }\n\n  _copyWithPrevPage() {\n    return this._copyWithOffsetChange(-this._pagingLimit);\n  }\n}\n\ninterface WrapWithQueryBuilderOptions {\n  func: any;\n  requestTransformer: any;\n  responseTransformer: any;\n  errorTransformer: any;\n  pagingMethod: any;\n  transformationPaths: any;\n  cursor?: any;\n}\n\nconst wrapWithQueryBuilder =\n  ({\n    func,\n    requestTransformer,\n    responseTransformer,\n    errorTransformer,\n    pagingMethod,\n    transformationPaths,\n    cursor = undefined,\n  }: WrapWithQueryBuilderOptions) =>\n  (builderOptions = {}) =>\n    new PlatformizedQueryMethodWrapper({\n      func,\n      builderOptions,\n      requestTransformer,\n      responseTransformer,\n      errorTransformer,\n      pagingMethod,\n      transformationPaths,\n      cursor,\n    });\n\nexport { wrapWithQueryBuilder, PlatformizedQueryMethodWrapper };\n"],"mappings":"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","ignoreList":[]}