{"version":3,"file":"filter-builder.umd.min.js","mappings":"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","sources":["webpack://_wix_filter_builder/webpack/universalModuleDefinition","webpack://_wix_filter_builder/../node_modules/kind-of/index.js","webpack://_wix_filter_builder/../../node_modules/@wix/babel-preset-yoshi/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_wix_filter_builder/../../node_modules/@wix/babel-preset-yoshi/node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://_wix_filter_builder/../../node_modules/@wix/babel-preset-yoshi/node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://_wix_filter_builder/../../node_modules/@wix/babel-preset-yoshi/node_modules/@babel/runtime/helpers/typeof.js","webpack://_wix_filter_builder/webpack/bootstrap","webpack://_wix_filter_builder/webpack/runtime/compat get default export","webpack://_wix_filter_builder/webpack/runtime/define property getters","webpack://_wix_filter_builder/webpack/runtime/hasOwnProperty shorthand","webpack://_wix_filter_builder/webpack/runtime/make namespace object","webpack://_wix_filter_builder/./type-utils.ts","webpack://_wix_filter_builder/./clone.ts","webpack://_wix_filter_builder/./filter-validator.ts","webpack://_wix_filter_builder/./query-optimiser.ts","webpack://_wix_filter_builder/./filter-mixin.ts","webpack://_wix_filter_builder/./filter-builder.ts","webpack://_wix_filter_builder/./wix-data-encoder.ts","webpack://_wix_filter_builder/./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"platformized-filter-builder\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"platformized-filter-builder\"] = factory();\n\telse\n\t\troot[\"platformized-filter-builder\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","var toString = Object.prototype.toString;\n\n/**\n * Get the native `typeof` a value.\n *\n * @param  {*} `val`\n * @return {*} Native javascript type\n */\n\nmodule.exports = function kindOf(val) {\n  var type = typeof val;\n\n  // primitivies\n  if (type === 'undefined') {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (val === true || val === false || val instanceof Boolean) {\n    return 'boolean';\n  }\n  if (type === 'string' || val instanceof String) {\n    return 'string';\n  }\n  if (type === 'number' || val instanceof Number) {\n    return 'number';\n  }\n\n  // functions\n  if (type === 'function' || val instanceof Function) {\n    if (typeof val.constructor.name !== 'undefined' && val.constructor.name.slice(0, 9) === 'Generator') {\n      return 'generatorfunction';\n    }\n    return 'function';\n  }\n\n  // array\n  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n    return 'array';\n  }\n\n  // check for instances of RegExp and Date before calling `toString`\n  if (val instanceof RegExp) {\n    return 'regexp';\n  }\n  if (val instanceof Date) {\n    return 'date';\n  }\n\n  // other objects\n  type = toString.call(val);\n\n  if (type === '[object RegExp]') {\n    return 'regexp';\n  }\n  if (type === '[object Date]') {\n    return 'date';\n  }\n  if (type === '[object Arguments]') {\n    return 'arguments';\n  }\n  if (type === '[object Error]') {\n    return 'error';\n  }\n  if (type === '[object Promise]') {\n    return 'promise';\n  }\n\n  // buffer\n  if (isBuffer(val)) {\n    return 'buffer';\n  }\n\n  // es6: Map, WeakMap, Set, WeakSet\n  if (type === '[object Set]') {\n    return 'set';\n  }\n  if (type === '[object WeakSet]') {\n    return 'weakset';\n  }\n  if (type === '[object Map]') {\n    return 'map';\n  }\n  if (type === '[object WeakMap]') {\n    return 'weakmap';\n  }\n  if (type === '[object Symbol]') {\n    return 'symbol';\n  }\n  \n  if (type === '[object Map Iterator]') {\n    return 'mapiterator';\n  }\n  if (type === '[object Set Iterator]') {\n    return 'setiterator';\n  }\n  if (type === '[object String Iterator]') {\n    return 'stringiterator';\n  }\n  if (type === '[object Array Iterator]') {\n    return 'arrayiterator';\n  }\n  \n  // typed arrays\n  if (type === '[object Int8Array]') {\n    return 'int8array';\n  }\n  if (type === '[object Uint8Array]') {\n    return 'uint8array';\n  }\n  if (type === '[object Uint8ClampedArray]') {\n    return 'uint8clampedarray';\n  }\n  if (type === '[object Int16Array]') {\n    return 'int16array';\n  }\n  if (type === '[object Uint16Array]') {\n    return 'uint16array';\n  }\n  if (type === '[object Int32Array]') {\n    return 'int32array';\n  }\n  if (type === '[object Uint32Array]') {\n    return 'uint32array';\n  }\n  if (type === '[object Float32Array]') {\n    return 'float32array';\n  }\n  if (type === '[object Float64Array]') {\n    return 'float64array';\n  }\n\n  // must be a plain object\n  return 'object';\n};\n\n/**\n * If you need to support Safari 5-7 (8-10 yr-old browser),\n * take a look at https://github.com/feross/is-buffer\n */\n\nfunction isBuffer(val) {\n  return val.constructor\n    && typeof val.constructor.isBuffer === 'function'\n    && val.constructor.isBuffer(val);\n}\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import getKind from 'kind-of'\n\nexport function isObject(obj) {\n  return getKind(obj) === 'object'\n}\n\nexport function isArray(arr) {\n  return getKind(arr) === 'array'\n}\n\nexport function isDate(obj) {\n  return getKind(obj) === 'date'\n}\n\nexport function isNumber(obj) {\n  return getKind(obj) === 'number'\n}\n\nexport function isBoolean(obj) {\n  return getKind(obj) === 'boolean'\n}\n\nexport function isString(obj) {\n  return getKind(obj) === 'string'\n}\n\nexport function isFunction(obj) {\n  return getKind(obj) === 'function'\n}\n\nexport function typeForDisplay(obj) {\n  return upperCaseFirst(getKind(obj))\n}\n\nexport function isUndefined(obj) {\n  return getKind(obj) === 'undefined'\n}\n\nexport function isNull(obj) {\n  return getKind(obj) === 'null'\n}\n\nfunction upperCaseFirst(str) {\n  if (!isString(str)) {\n    return str\n  }\n  const first = str.slice(0, 1).toUpperCase()\n  const rest = str.slice(1, str.length)\n  return first + rest\n}\n","import { isDate } from './type-utils'\n\nexport default function clone(obj) {\n  if (obj == null || typeof obj !== 'object') {\n    return obj\n  }\n\n  let temp: any = null\n\n  if (isDate(obj)) {\n    temp = new Date(obj.getTime())\n  } else {\n    temp = obj.constructor()\n    for (const key in obj) {\n      temp[key] = clone(obj[key])\n    }\n  }\n\n  return temp\n}\n","import { typeForDisplay, isDate, isString, isNumber } from './type-utils'\nimport clone from './clone'\nimport { Validator } from './validator'\n\nexport class FilterValidator implements Validator {\n  private ctor\n  private _invalidArguments: string[]\n  public _validations: Validation[]\n  public operatorName?: string\n\n  constructor(operatorName, previousInvalidArguments, ctor) {\n    this._validations = []\n    this.operatorName = operatorName\n    this.ctor = ctor\n    this._invalidArguments = clone(previousInvalidArguments)\n  }\n\n  typeIsString(value) {\n    return this.addValidation(\n      () => isString(value),\n      () =>\n        `Invalid ${this.operatorName} parameter value [${typeForDisplay(\n          value\n        )}]. ${this.operatorName} parameter must be a String.`\n    )\n  }\n\n  typeIsStringNumberOrDate(value) {\n    return this.addValidation(\n      () => isDateStringOrNumber(value),\n      () =>\n        `Invalid ${this.operatorName} parameter value [${typeForDisplay(\n          value\n        )}]. Valid ${\n          this.operatorName\n        } parameter types are String, Number or Date.`\n    )\n  }\n\n  sameType(first, second) {\n    return this.addValidation(\n      () => typeForDisplay(first) === typeForDisplay(second),\n      () =>\n        `Invalid ${this.operatorName} parameter values [${typeForDisplay(\n          first\n        )}] and [${typeForDisplay(\n          second\n        )}]. Both parameters must be of the same type.`\n    )\n  }\n\n  typeIsStringNumberOrDateForAll(values) {\n    return this.addValidation(\n      () => values.every(isDateStringOrNumber),\n      () =>\n        `Invalid ${this.operatorName} usage. ${this.operatorName} supports only Number, String or Date items.`\n    )\n  }\n\n  validFieldName(field) {\n    return this.addValidation(\n      () => isString(field),\n      () =>\n        `Invalid ${this.operatorName} field value [${typeForDisplay(field)}]. ${\n          this.operatorName\n        } field must be a String.`\n    )\n  }\n\n  isInstanceOfSameClass(obj) {\n    return this.addValidation(\n      () => obj instanceof this.ctor,\n      () =>\n        `Invalid ${this.operatorName} parameter [${typeForDisplay(obj)}]. ${\n          this.operatorName\n        } expects FilterBuilder only.`\n    )\n  }\n\n  arityIsOne(args) {\n    return this.addValidation(\n      () => args.length === 1,\n      () =>\n        `Invalid ${this.operatorName} usage. ${this.operatorName} requires one parameter.`\n    )\n  }\n\n  arityIsTwo(args) {\n    return this.addValidation(\n      () => args.length === 2,\n      () =>\n        `Invalid ${this.operatorName} usage. ${this.operatorName} requires two parameters.`\n    )\n  }\n\n  arityIsThree(args) {\n    return this.addValidation(\n      () => args.length === 3,\n      () =>\n        `Invalid ${this.operatorName} usage. ${this.operatorName} requires three parameters.`\n    )\n  }\n\n  arityIsAtLeastTwo(args) {\n    return this.addValidation(\n      () => args.length >= 2,\n      () =>\n        `Invalid ${this.operatorName} usage. ${this.operatorName} requires at least two parameters.`\n    )\n  }\n\n  addValidation(predicateFn, messageFn) {\n    this._validations.push({\n      predicateFn,\n      messageFn,\n    })\n    return this\n  }\n\n  validateAndAggregate(): [string[], boolean] {\n    const valid = this._validations.every(({ predicateFn, messageFn }) =>\n      this._appendIfInvalid(predicateFn(), messageFn())\n    )\n    return [this._invalidArguments, valid]\n  }\n\n  _appendIfInvalid(valid, message) {\n    if (!valid) {\n      this._invalidArguments.push(message)\n      return false\n    }\n    return true\n  }\n}\n\nfunction isDateStringOrNumber(value) {\n  return isString(value) || isNumber(value) || isDate(value)\n}\n\ninterface Validation {\n  predicateFn: Function\n  messageFn: Function\n}\n","const optimisations = [\n  optimisedUnaryAnd,\n  optimisedEmptyAnd,\n  optimisedAndsAsObjects,\n  optimisedNestedAnds,\n  optimisedNestedOrs,\n]\n\nexport function optimisedQuery(query) {\n  const [newQuery] = fullyOptimised(query)\n  return newQuery\n}\n\nfunction fullyOptimised(query) {\n  if (Array.isArray(query)) {\n    return fullyOptimisedArray(query)\n  }\n  if (\n    typeof query === 'object' &&\n    query !== null &&\n    !instanceOfIgnoredType(query)\n  ) {\n    return fullyOptimisedObject(query)\n  }\n  return [query, false]\n}\n\nfunction fullyOptimisedArray(query) {\n  const optimisedElements = query.map(fullyOptimised)\n  const somethingChanged =\n    0 < optimisedElements.filter(([, elementChanged]) => elementChanged).length\n  const newElements = optimisedElements.map(([element]) => element)\n  return [newElements, somethingChanged]\n}\n\nfunction fullyOptimisedObject(query) {\n  const [queryAfterOptimisingEntries, changedStage1] =\n    fullEntriesOptimisation(query)\n  const [queryAfterFullOptimisation, changedStage2] = fullObjectOptimisation(\n    queryAfterOptimisingEntries\n  )\n  const changed = changedStage1 || changedStage2\n  return [queryAfterFullOptimisation, changed]\n\n  function fullObjectOptimisation(query) {\n    const updatedQuery = applyFirstOptimisation(query)\n    if (!updatedQuery) {\n      return [query, false]\n    }\n    const [finalQuery] = fullyOptimised(updatedQuery)\n    return [finalQuery, true]\n  }\n\n  function fullEntriesOptimisation(query) {\n    const changedEntries = Object.entries(query)\n      .map(entryOptimisation)\n      .filter(([, , changed]) => changed)\n    const newQuery = { ...query, ...entriesAsObject(changedEntries) }\n    const changed = !!changedEntries.length\n    return [newQuery, changed]\n  }\n\n  function entryOptimisation([key, value]) {\n    const [newValue, changed] = fullyOptimised(value)\n    return [key, newValue, changed]\n  }\n\n  function entriesAsObject(entries) {\n    return entries.reduce((acc, [key, value]) => ({ ...acc, [key]: value }), {})\n  }\n}\n\nfunction applyFirstOptimisation(node) {\n  for (const optimisation of optimisations) {\n    const newNode = optimisation(node)\n    if (newNode) {\n      return newNode\n    }\n  }\n}\n\nfunction optimisedUnaryAnd(node) {\n  const args = node.$and\n  if (Array.isArray(args) && args.length === 1) {\n    return args[0]\n  }\n}\n\nfunction optimisedEmptyAnd(node) {\n  const args = node.$and\n  if (Array.isArray(args) && args.length === 0) {\n    return {}\n  }\n  return null\n}\n\nfunction optimisedAndsAsObjects(node) {\n  const args = node.$and\n  if (!args) {\n    return\n  }\n\n  let basicObjects: any[] = []\n  let operatorObjects: any[] = []\n\n  args.forEach((arg) => {\n    if (isOperator(arg)) {\n      operatorObjects = [...operatorObjects, arg]\n    } else {\n      basicObjects = [...basicObjects, arg]\n    }\n  })\n\n  if (basicObjects.length <= 1 || haveOverlappingFields(basicObjects)) {\n    return\n  }\n  const combinedBasicObjects = Object.assign({}, ...basicObjects)\n\n  return { $and: [combinedBasicObjects, ...operatorObjects] }\n\n  function isOperator(node) {\n    const keys = Object.keys(node)\n    return keys.every((name) => name.startsWith('$')) && keys.length > 0\n  }\n\n  function haveOverlappingFields(objects) {\n    const nonUniqueKeys = objects\n      .map((it) => Object.keys(it))\n      .reduce((a, b) => [...a, ...b], [])\n    const uniqueKeys = unique(nonUniqueKeys)\n    return uniqueKeys.length !== nonUniqueKeys.length\n  }\n\n  function unique(values) {\n    const dict = {}\n    values.forEach((v) => (dict[v] = true))\n    return Object.keys(dict)\n  }\n}\n\nfunction optimisedNestedAnds(node) {\n  const args = node.$and\n  if (!args) {\n    return\n  }\n\n  const hasNestedAnds = !!args.find((it) => it.$and)\n  if (!hasNestedAnds) {\n    return\n  }\n\n  const newArgs = args.reduce((result, current) => {\n    const and = current.$and\n    if (!and) {\n      return [...result, current]\n    }\n    return [...result, ...and]\n  }, [])\n  return { $and: newArgs }\n}\n\nfunction optimisedNestedOrs(node) {\n  const args = node.$or\n  if (!args) {\n    return\n  }\n\n  const hasNestedOrs = !!args.find((it) => it.$or)\n  if (!hasNestedOrs) {\n    return\n  }\n\n  const newArgs = args.reduce((result, current) => {\n    const or = current.$or\n    if (!or) {\n      return [...result, current]\n    }\n    return [...result, ...or]\n  }, [])\n  return { $or: newArgs }\n}\n\nfunction instanceOfIgnoredType(obj) {\n  return obj instanceof Date\n}\n","import { isArray, isFunction } from './type-utils'\nimport clone from './clone'\nimport { FilterValidator } from './filter-validator'\nimport { Validator } from './validator'\nimport { optimisedQuery } from './query-optimiser'\n\nconst filterMixin = (Base: any = class {}) =>\n  class extends Base {\n    filterTree\n    invalidArguments\n    encoder\n\n    constructor(obj: { filterTree?; invalidArguments?; encoder? } = {}) {\n      super(obj)\n      this.filterTree = obj.filterTree || { $and: [] }\n      this.invalidArguments = obj.invalidArguments || []\n      this.encoder = obj.encoder || {}\n    }\n\n    eq(...args) {\n      return this._binaryAnd('$eq', '.eq', args)\n    }\n\n    ne(...args) {\n      return this._binaryAnd('$ne', '.ne', args)\n    }\n\n    ge(...args) {\n      return this._AndLogicalEquivalence('$gte', '.ge', args)\n    }\n\n    gt(...args) {\n      return this._AndLogicalEquivalence('$gt', '.gt', args)\n    }\n\n    le(...args) {\n      return this._AndLogicalEquivalence('$lte', '.le', args)\n    }\n\n    lt(...args) {\n      return this._AndLogicalEquivalence('$lt', '.lt', args)\n    }\n\n    isNotEmpty(field) {\n      const [newInvalidArguments, valid] = this._filterValidator('.isNotEmpty')\n        .arityIsOne(arguments)\n        .validFieldName(field)\n        .validateAndAggregate()\n\n      if (valid) {\n        return this.ne(field, null)\n      }\n\n      return this._copy(this.filterTree, newInvalidArguments)\n    }\n\n    isEmpty(field) {\n      const [newInvalidArguments, valid] = this._filterValidator('.isEmpty')\n        .arityIsOne(arguments)\n        .validFieldName(field)\n        .validateAndAggregate()\n\n      if (valid) {\n        return this.eq(field, null)\n      }\n\n      return this._copy(this.filterTree, newInvalidArguments)\n    }\n\n    startsWith(...args) {\n      return this._AndStringOperand('$startsWith', '.startsWith', args)\n    }\n\n    endsWith(...args) {\n      return this._AndStringOperand('$endsWith', '.endsWith', args)\n    }\n\n    contains(...args) {\n      return this._AndStringOperand('$contains', '.contains', args)\n    }\n\n    hasSome(...args) {\n      return this._AndSetOperand('$hasSome', '.hasSome', args)\n    }\n\n    hasAll(...args) {\n      return this._AndSetOperand('$hasAll', '.hasAll', args)\n    }\n\n    or(orQuery) {\n      const [newInvalidArguments, valid] = this._filterValidator('.or')\n        .arityIsOne(arguments)\n        .isInstanceOfSameClass(orQuery)\n        .validateAndAggregate()\n\n      if (valid) {\n        const prefix = isEmptyAnd(this.filterTree) ? [] : [this.filterTree]\n        return this._copy(\n          inAnd({ $or: [...prefix, orQuery.filterTree] }),\n          newInvalidArguments.concat(orQuery.invalidArguments)\n        )\n      } else {\n        return this._copy(this.filterTree, newInvalidArguments)\n      }\n    }\n\n    and(andQuery) {\n      const [newInvalidArguments, valid] = this._filterValidator('.and')\n        .arityIsOne(arguments)\n        .isInstanceOfSameClass(andQuery)\n        .validateAndAggregate()\n\n      if (valid) {\n        const prefix = isEmptyAnd(this.filterTree) ? [] : [this.filterTree]\n        return this._copy(\n          inAnd(...prefix, andQuery.filterTree),\n          newInvalidArguments.concat(andQuery.invalidArguments)\n        )\n      } else {\n        return this._copy(this.filterTree, newInvalidArguments)\n      }\n    }\n\n    not(notQuery) {\n      const [newInvalidArguments, valid] = this._filterValidator('.not')\n        .arityIsOne(arguments)\n        .isInstanceOfSameClass(notQuery)\n        .validateAndAggregate()\n\n      if (valid) {\n        const newFilterTree = clone(this.filterTree)\n        const notClause = { $not: [notQuery.filterTree] }\n        const resultingFilter = inAndOptimized(newFilterTree, notClause)\n\n        return this._copy(\n          resultingFilter,\n          newInvalidArguments.concat(notQuery.invalidArguments)\n        )\n      } else {\n        return this._copy(this.filterTree, newInvalidArguments)\n      }\n    }\n\n    between(field, rangeStart, rangeEnd) {\n      const [newInvalidArguments, valid] = this._filterValidator('.between')\n        .arityIsThree(arguments)\n        .sameType(rangeStart, rangeEnd)\n        .typeIsStringNumberOrDate(rangeStart)\n        .typeIsStringNumberOrDate(rangeEnd)\n        .validateAndAggregate()\n\n      if (valid) {\n        return this.ge(field, rangeStart).lt(field, rangeEnd)\n      }\n\n      return this._copy(this.filterTree, newInvalidArguments)\n    }\n\n    getFilterModel() {\n      if (this.invalidArguments.length > 0) {\n        throw new Error(this.invalidArguments.join(' '))\n      }\n      return optimisedQuery(this.filterTree)\n    }\n\n    setFilterModel(filterModel) {\n      return this._copy(filterModel, [])\n    }\n\n    _binaryAnd(filterOperatorSymbol, operatorName, args) {\n      const [field, operand] = Array.prototype.slice.call(args)\n\n      const [newInvalidArguments] = this._filterValidator(operatorName)\n        .arityIsTwo(args)\n        .validFieldName(field)\n        .validateAndAggregate()\n\n      const newFilterTree = this._makeNewFilter(\n        field,\n        filterOperatorSymbol,\n        operand\n      )\n\n      return this._copy(newFilterTree, newInvalidArguments)\n    }\n\n    _AndLogicalEquivalence(filterOperatorSymbol, operatorName, args) {\n      const [field, operand] = Array.prototype.slice.call(args)\n\n      const [newInvalidArguments] = this._filterValidator(operatorName)\n        .arityIsTwo(args)\n        .validFieldName(field)\n        .typeIsStringNumberOrDate(operand)\n        .validateAndAggregate()\n\n      const newFilterTree = this._makeNewFilter(\n        field,\n        filterOperatorSymbol,\n        operand\n      )\n      return this._copy(newFilterTree, newInvalidArguments)\n    }\n\n    _AndStringOperand(filterOperatorName, operatorName, args) {\n      const [field, operand] = Array.prototype.slice.call(args)\n\n      const [newInvalidArguments] = this._filterValidator(operatorName)\n        .arityIsTwo(args)\n        .validFieldName(field)\n        .typeIsString(operand)\n        .validateAndAggregate()\n\n      const newFilterTree = this._makeNewFilter(\n        field,\n        filterOperatorName,\n        operand\n      )\n\n      return this._copy(newFilterTree, newInvalidArguments)\n    }\n\n    _AndSetOperand(filterOperatorName, operatorName, args) {\n      const [field, ...rawOperands] = Array.prototype.slice.call(args)\n      const operands = isArray(rawOperands[0]) ? rawOperands[0] : rawOperands\n\n      const [newInvalidArguments] = this._filterValidator(operatorName)\n        .arityIsAtLeastTwo(args)\n        .validFieldName(field)\n        .typeIsStringNumberOrDateForAll(operands)\n        .validateAndAggregate()\n\n      const newFilterTree = this._makeNewFilter(\n        field,\n        filterOperatorName,\n        operands\n      )\n      return this._copy(newFilterTree, newInvalidArguments)\n    }\n\n    _makeNewFilter(field, filterOperatorName, operand) {\n      const newFilterTree = clone(this.filterTree)\n\n      // filters with 'undefined' value are lost during serialization,\n      // e.g. { val: { $ne: undefined } | translates to { val: {} }\n      // Replacing 'undefined' with 'null' retains the filter.\n      const serializableOperand = operand === undefined ? null : operand\n      const newFilter = this._buildFilter(\n        field,\n        filterOperatorName,\n        serializableOperand\n      )\n\n      if (isArray(newFilterTree.$and)) {\n        newFilterTree.$and.push(newFilter)\n        return newFilterTree\n      } else {\n        const result = isEmptyObject(newFilterTree)\n          ? inAnd(newFilter)\n          : inAnd(newFilterTree, newFilter)\n        return result\n      }\n    }\n\n    _buildFilter(field, filterOperatorName, operand) {\n      if (filterOperatorName !== '$eq') {\n        const newFilter = {}\n        newFilter[field] = {}\n        newFilter[field][filterOperatorName] = this._encode(operand)\n        return newFilter\n      } else {\n        const newFilter = {}\n        newFilter[field] = this._encode(operand)\n        return newFilter\n      }\n    }\n\n    _encode(operand) {\n      if (isFunction(this.encoder)) {\n        return this.encoder(operand)\n      } else {\n        return operand\n      }\n    }\n\n    _copy(filterTree, invalidArguments) {\n      // @ts-ignore-next-line\n      return new this.constructor({ ...this, filterTree, invalidArguments })\n    }\n\n    _filterValidator(filterOperatorName): Validator {\n      return new FilterValidator(\n        filterOperatorName,\n        this.invalidArguments,\n        this.constructor\n      )\n    }\n  }\n\nfunction isConjunctiveFormFilter(filterTree) {\n  return isArray(filterTree.$and)\n}\n\nfunction isEmptyObject(obj) {\n  return Object.keys(obj).length === 0\n}\n\nfunction inAnd(...args) {\n  return {\n    $and: args,\n  }\n}\n\nfunction inAndOptimized(...args) {\n  return {\n    $and: args.reduce(\n      (aggr, val) =>\n        isConjunctiveFormFilter(val)\n          ? aggr.concat(val.$and)\n          : aggr.concat([val]),\n      []\n    ),\n  }\n}\n\nfunction isEmptyAnd(node) {\n  return node && node.$and && node.$and.length === 0\n}\n\nexport default filterMixin\n","import filterMixin from './filter-mixin'\n\nexport class FilterBuilder extends filterMixin() {\n  get constructorName() {\n    return 'FilterBuilder'\n  }\n\n  _build() {\n    return this.getFilterModel()\n  }\n}\n\nexport function filterBuilder(params = {}) {\n  return new FilterBuilder(params)\n}\n\nexport default filterBuilder\n","import { isDate } from './type-utils'\n\nexport function wixDataEncoder(operand) {\n  if (isDate(operand)) {\n    return { $date: operand.toJSON() }\n  } else {\n    return operand\n  }\n}\n","import { filterBuilder } from './filter-builder'\nimport filterMixin from './filter-mixin'\nimport { optimisedQuery as optimiseQuery } from './query-optimiser'\nimport { Validator } from './validator'\nimport { wixDataEncoder } from './wix-data-encoder'\n\nexport { filterMixin, filterBuilder, optimiseQuery, Validator, wixDataEncoder }\n\nexport default filterBuilder\n"],"names":["root","factory","exports","module","define","amd","self","this","toString","Object","prototype","val","type","Boolean","String","Number","Function","constructor","name","slice","Array","isArray","RegExp","Date","call","isBuffer","toPropertyKey","obj","key","value","defineProperty","enumerable","configurable","writable","__esModule","_typeof","t","r","e","Symbol","toPrimitive","i","TypeError","o","iterator","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","d","a","definition","get","prop","hasOwnProperty","toStringTag","arr","getKind","isDate","isString","typeForDisplay","str","first","toUpperCase","rest","length","upperCaseFirst","clone","temp","getTime","FilterValidator","operatorName","previousInvalidArguments","ctor","_defineProperty","_validations","_invalidArguments","typeIsString","addValidation","typeIsStringNumberOrDate","isDateStringOrNumber","sameType","second","typeIsStringNumberOrDateForAll","values","every","validFieldName","field","isInstanceOfSameClass","arityIsOne","args","arityIsTwo","arityIsThree","arityIsAtLeastTwo","predicateFn","messageFn","push","validateAndAggregate","valid","_ref","_appendIfInvalid","message","optimisations","node","$and","basicObjects","operatorObjects","forEach","arg","keys","startsWith","isOperator","objects","nonUniqueKeys","map","it","reduce","b","dict","v","unique","haveOverlappingFields","assign","find","result","current","and","$or","or","optimisedQuery","query","newQuery","fullyOptimised","optimisedElements","somethingChanged","filter","elementChanged","_ref2","element","fullyOptimisedArray","queryAfterOptimisingEntries","changedStage1","fullEntriesOptimisation","queryAfterFullOptimisation","changedStage2","fullObjectOptimisation","updatedQuery","optimisation","newNode","applyFirstOptimisation","finalQuery","changedEntries","entries","entryOptimisation","_ref3","changed","entriesAsObject","_ref4","newValue","acc","_ref5","fullyOptimisedObject","inAnd","_len12","arguments","_key12","isEmptyAnd","Base","super","filterTree","invalidArguments","encoder","eq","_len","_key","_binaryAnd","ne","_len2","_key2","ge","_len3","_key3","_AndLogicalEquivalence","gt","_len4","_key4","le","_len5","_key5","lt","_len6","_key6","isNotEmpty","newInvalidArguments","_filterValidator","_copy","isEmpty","_len7","_key7","_AndStringOperand","endsWith","_len8","_key8","contains","_len9","_key9","hasSome","_len10","_key10","_AndSetOperand","hasAll","_len11","_key11","orQuery","prefix","concat","andQuery","not","notQuery","resultingFilter","_len13","_key13","aggr","inAndOptimized","$not","between","rangeStart","rangeEnd","getFilterModel","Error","join","setFilterModel","filterModel","filterOperatorSymbol","operand","newFilterTree","_makeNewFilter","filterOperatorName","rawOperands","operands","serializableOperand","newFilter","_buildFilter","_encode","FilterBuilder","filterMixin","constructorName","_build","filterBuilder","params","wixDataEncoder","$date","toJSON"],"sourceRoot":""}