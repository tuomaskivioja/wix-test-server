{"version":3,"file":"metro-runtime.umd.js","mappings":"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B,EAAE,sBAAsB,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,MAAM,gBAAS;AACf;AACA;AACA;AACA,+DAA+D,EAAE,wBAAwB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA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","sources":["webpack://_wix_metro_runtime/webpack/universalModuleDefinition","webpack://_wix_metro_runtime/webpack/bootstrap","webpack://_wix_metro_runtime/webpack/runtime/define property getters","webpack://_wix_metro_runtime/webpack/runtime/hasOwnProperty shorthand","webpack://_wix_metro_runtime/webpack/runtime/make namespace object","webpack://_wix_metro_runtime/./serialization/utils.ts","webpack://_wix_metro_runtime/./serialization/index.ts","webpack://_wix_metro_runtime/./utils.ts","webpack://_wix_metro_runtime/./url-resolver.ts","webpack://_wix_metro_runtime/../../../node_modules/js-base64/base64.mjs","webpack://_wix_metro_runtime/./flatten-params.ts","webpack://_wix_metro_runtime/./index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"counter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"counter\"] = factory();\n\telse\n\t\troot[\"counter\"] = factory();\n})((typeof self !== 'undefined' ? self : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","type SchemaType = 'Array' | 'Map';\n\nexport function parseLeanSchemaRef(renderedSchemaName: string = ''): {\n  schemaName: string;\n  schemaType?: SchemaType;\n} {\n  const [typeOrName, schemaName] = getSchemaNameAndType(renderedSchemaName);\n\n  if (schemaName) {\n    return {\n      schemaName,\n      schemaType: typeOrName as SchemaType,\n    };\n  }\n\n  return {\n    schemaName: typeOrName,\n  };\n}\n\n// if there is no type, returns only the name\nconst getSchemaNameAndType = (leanSchema: string): string[] =>\n  leanSchema.split('#');\n","export * from './utils';\n","export function findByPath(\n  obj: object,\n  path: string,\n  defaultValue: string,\n  suffix: string,\n) {\n  let result: any = obj;\n  for (const field of path.split('.')) {\n    if (!result) {\n      return defaultValue;\n    }\n    result = result[field];\n  }\n\n  return `${result}${suffix}`;\n}\n","import { findByPath } from './utils';\n\nconst USER_DOMAIN = '_';\n\nconst DOMAINS = ['wix.com', 'editorx.com'];\n\nconst WIX_API_DOMAINS = ['42.wixprod.net', 'uw2-edt-1.wixprod.net'];\n\nconst DEV_WIX_CODE_DOMAIN = 'dev.wix-code.com';\n\nconst REGEX_CAPTURE_PROTO_FIELD = /{(.*)}/;\n\nconst REGEX_CAPTURE_DOMAINS = new RegExp(`\\\\.(${DOMAINS.join('|')})$`);\n\nconst REGEX_CAPTURE_API_DOMAINS = new RegExp(\n  `\\\\.(${WIX_API_DOMAINS.join('|')})$`,\n);\n\nconst REGEX_CAPTURE_DEV_WIX_CODE_DOMAIN = new RegExp(\n  `.*\\\\.${DEV_WIX_CODE_DOMAIN}$`,\n);\n\nexport type ResolveUrlOpts = {\n  // resource path as defined in proto file, including all wildcards & co.\n  protoPath: string;\n\n  // domain as defined on FP to its mappings (might be more than one)\n  // www._base_domain_ => [{ srcPath: '/_api/foo', destPath: '/api' }]\n  domainToMappings: DomainToMappings;\n\n  // actual payload attached to request, needed in order to rersolve path,\n  // in case it conatins some dynamic parameters\n  data?: object;\n\n  // request's host\n  host: string;\n};\n\nexport function resolveUrl(opts: ResolveUrlOpts) {\n  const domain = resolveDomain(opts.host);\n  const mappings = resolveMappingsByDomain(domain, opts.domainToMappings);\n  const path = injectDataIntoProtoPath(opts.protoPath, opts.data || {});\n\n  return resolvePath(path, mappings);\n}\n\nfunction injectDataIntoProtoPath(protoPath: string, data: object) {\n  return protoPath\n    .split('/')\n    .map((path) => maybeProtoPathToData(path, data))\n    .join('/');\n}\n\nfunction maybeProtoPathToData(protoPath: string, data: object) {\n  const protoRegExpMatch = protoPath.match(REGEX_CAPTURE_PROTO_FIELD) || [];\n\n  const field = protoRegExpMatch[1];\n\n  if (field) {\n    const suffix = protoPath.replace(protoRegExpMatch[0]!, '');\n    return findByPath(data, field, protoPath, suffix);\n  }\n\n  return protoPath;\n}\n\nfunction resolveDomain(host: string) {\n  const resolvedHost = fixHostExceptions(host);\n\n  return resolvedHost\n    .replace(REGEX_CAPTURE_DOMAINS, '._base_domain_')\n    .replace(REGEX_CAPTURE_API_DOMAINS, '._api_base_domain_')\n    .replace(REGEX_CAPTURE_DEV_WIX_CODE_DOMAIN, '*.dev.wix-code.com');\n}\n\n// hosts which standard string replacing doesn't apply to them, will be fixed here.\nfunction fixHostExceptions(host: string) {\n  // https://system-kb.wixanswers.com/kb/en/article/editorx-domains-matching-to-wixcom\n  return host.replace('create.editorx.com', 'editor.editorx.com');\n}\n\nfunction resolveMappingsByDomain(\n  domain: string,\n  domainToMappings: DomainToMappings,\n) {\n  const mappings = domainToMappings[domain] || domainToMappings[USER_DOMAIN];\n\n  if (!mappings) {\n    if (isBaseDomain(domain)) {\n      // fallback <lang>.wix.com sub domains to www.wix.com\n      // since all of the languages subdomain are not mapped automatically in FP and we want to support those kind of calls\n      // for example: fr.wix.com\n      return domainToMappings[wwwBaseDomain];\n    }\n  }\n\n  return mappings;\n}\n\nfunction resolvePath(protoPath: string, mappings: Mapping[]) {\n  const mapping = mappings?.find((m) => protoPath.startsWith(m.destPath));\n\n  if (!mapping) {\n    // todo: should we return the path? if no - what should we do in case of testings?\n    return protoPath;\n  }\n\n  return mapping.srcPath + protoPath.slice(mapping.destPath.length);\n}\n\ntype Mapping = {\n  srcPath: string;\n  destPath: string;\n};\n\ntype DomainToMappings = Record<string, Mapping[]>;\n\nfunction isBaseDomain(domain: string) {\n  return !!domain.match(/\\._base_domain_$/);\n}\n\nconst wwwBaseDomain = 'www._base_domain_';\n","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.7';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n","import { encode } from 'js-base64';\n\n// Flatten a nested object to params object { field: { text: 'foo' } } => { field.text ='foo' }\nfunction flattenParams(data: object, path = '') {\n  const params: any = {};\n\n  Object.entries(data).forEach(([key, value]) => {\n    const isObject =\n      value !== null && typeof value === 'object' && !Array.isArray(value);\n    const fieldPath = resolvePath(path, key);\n\n    if (isObject) {\n      const serializedObject = flattenParams(value, fieldPath);\n      Object.assign(params, serializedObject);\n    } else {\n      params[fieldPath] = value;\n    }\n  });\n\n  return params;\n}\n\nfunction resolvePath(path: string, key: string) {\n  return `${path}${path ? '.' : ''}${key}`;\n}\n\nexport function toURLSearchParams(params: any, isComplexRequest?: boolean) {\n  const flatten = flattenParams(params);\n\n  const searchParams = Object.entries(flatten).reduce(\n    (urlSearchParams, [key, value]) => {\n      // inorder to make `foo: [1,2]` turn into `foo=1&foo=2` and not `foo[]=1&foo[]=2`\n      const keyParams = Array.isArray(value) ? value : [value];\n\n      keyParams.forEach((param: any) => {\n        if (param === undefined || param === null) {\n          return;\n        }\n\n        urlSearchParams.append(key, param);\n      });\n\n      return urlSearchParams;\n    },\n    new URLSearchParams(),\n  );\n\n  // https://github.com/wix-private/server-infra/tree/master/framework/grpc/rest#complex-requests-messages-with-get-mappings\n  if (isComplexRequest) {\n    searchParams.append('.r', encode(JSON.stringify(params), true));\n  }\n\n  return searchParams;\n}\n","export * from './serialization';\nexport * from './url-resolver';\nexport * from './flatten-params';\n"],"names":["parseLeanSchemaRef","renderedSchemaName","typeOrName","schemaName","getSchemaNameAndType","schemaType","leanSchema","split","findByPath","obj","path","defaultValue","suffix","result","field","USER_DOMAIN","DOMAINS","WIX_API_DOMAINS","DEV_WIX_CODE_DOMAIN","REGEX_CAPTURE_PROTO_FIELD","REGEX_CAPTURE_DOMAINS","RegExp","join","REGEX_CAPTURE_API_DOMAINS","REGEX_CAPTURE_DEV_WIX_CODE_DOMAIN","resolveUrl","opts","domain","resolveDomain","host","mappings","resolveMappingsByDomain","domainToMappings","injectDataIntoProtoPath","protoPath","data","resolvePath","map","maybeProtoPathToData","protoRegExpMatch","match","replace","resolvedHost","fixHostExceptions","isBaseDomain","wwwBaseDomain","mapping","find","m","startsWith","destPath","srcPath","slice","length","encode","flattenParams","params","Object","entries","forEach","_ref","key","value","isObject","Array","isArray","fieldPath","serializedObject","assign","toURLSearchParams","isComplexRequest","flatten","searchParams","reduce","urlSearchParams","_ref2","keyParams","param","undefined","append","URLSearchParams","JSON","stringify"],"sourceRoot":""}