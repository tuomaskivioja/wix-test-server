import { ConverterType } from '../domain';
import { alignIfLegacy, decodeText, encodeText, WIX_PROTOCOL, } from './converters-utils';
export function createMediaConverter(fieldType, commonType) {
    return {
        types: [commonType],
        [ConverterType.FROM_JSON]: {
            transform: (val) => {
                if (!val) {
                    return;
                }
                let fileName = '';
                if (val?.filename) {
                    fileName = `/${encodeText(val.filename)}`;
                }
                return val.id ? `wix:${fieldType}://v1/${val.id}${fileName}` : val.url;
            },
        },
        [ConverterType.TO_JSON]: {
            transform: (val) => {
                if (!val) {
                    return;
                }
                const alignedUrl = alignIfLegacy(val, fieldType);
                const { protocol, pathname } = new URL(alignedUrl);
                const [id, filename] = pathname
                    .replace(`${fieldType}://v1/`, '')
                    .split('/');
                if (protocol === WIX_PROTOCOL) {
                    if (!filename) {
                        return { id };
                    }
                    return {
                        id,
                        filename: decodeText(filename),
                    };
                }
                return { url: val };
            },
        },
    };
}
//# sourceMappingURL=base-media.js.map