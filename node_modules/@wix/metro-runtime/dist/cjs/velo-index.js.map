{"version":3,"names":["_motionEdmAutogenP13n","require","_motionEdmAutogenTransformations","_domain","_converters","_serializer","_utils","_lodash","_converters2","_transformationHandler","exports","RootPath","transformError","_queryTransformation","resolveQueryFieldsTransformationPaths","_renameAllNestedKeys","converters","typeToConverterSet","protobufConverters","veloConverters","extractDomainEventPayload","parsedDomainEvent","_parsedDomainEvent$cr","_parsedDomainEvent$ac","_parsedDomainEvent$up","_parsedDomainEvent$de","event","createdEvent","entityAsJson","actionEvent","bodyAsJson","updatedEvent","currentEntityAsJson","deletedEvent","deletedEntityAsJson","Error","serializer","rootSchema","depSchemas","fqdnTransformation","paths","transformation","customTransformation","serialize","schemaSerializer","toAmbassadorRequest","userInputArgs","ignorePathsForKeyRenames","omitBy","renameAllNestedKeys","transformToRequestMessage","builtinCustomFunctions","_id","_createdDate","_updatedDate","ConverterType","TO_JSON","isUndefined","fromJSON","json","deserialized","FROM_JSON","fqdnTransformed","transformFqdn","fqdnTransformedWithRenamedKeys","id","createdDate","updatedDate","transformResponseMessage","toJSON","veloPayload"],"sources":["../../src/velo-index.ts"],"sourcesContent":["import { builtinCustomFunctions } from '@wix/motion-edm-autogen-p13n';\nimport {\n  transformResponseMessage,\n  transformToRequestMessage,\n} from '@wix/motion-edm-autogen-transformations';\nimport { ConverterType, Payload } from './serializer/domain';\nimport { protobufConverters } from './serializer/protobuf-converters/converters';\nimport { schemaSerializer } from './serializer/serializer';\nimport { typeToConverterSet } from './serializer/utils';\nimport { isUndefined, omitBy } from 'lodash';\nimport { veloConverters } from './serializer/velo-converters/converters';\nimport {\n  RootPath,\n  transformError,\n  transformFqdn,\n} from './transformation-handler';\nimport { SerializerParams } from './types';\nimport { resolveQueryFieldsTransformationPaths } from './query-transformation';\nimport { renameAllNestedKeys } from './rename-all-nested-keys';\n\nconst converters = typeToConverterSet([\n  ...protobufConverters,\n  ...veloConverters,\n]);\n\nexport { RootPath, resolveQueryFieldsTransformationPaths, transformError };\n\nexport type { GoogleProtoDuration } from './serializer/protobuf-converters/types';\n\nexport type DomainEventMetadata = {\n  id?: string;\n  entityId?: string;\n  eventTime?: string;\n  triggeredByAnonymizeRequest?: boolean;\n};\n\nexport type DeletedEvent = { deletedEntityAsJson?: object };\n\nexport type DomainEvent = {\n  createdEvent?: { entityAsJson: object };\n  updatedEvent?: { currentEntityAsJson: object };\n  actionEvent?: { bodyAsJson: object };\n  deletedEvent?: { deletedEntityAsJson?: object };\n} & DomainEventMetadata;\n\nexport function extractDomainEventPayload(parsedDomainEvent: DomainEvent) {\n  const event =\n    parsedDomainEvent.createdEvent?.entityAsJson ||\n    parsedDomainEvent.actionEvent?.bodyAsJson ||\n    parsedDomainEvent.updatedEvent?.currentEntityAsJson ||\n    parsedDomainEvent.deletedEvent?.deletedEntityAsJson;\n\n  if (event) {\n    return event;\n  }\n\n  throw new Error('Invalid Domain Event structure detected');\n}\n\nexport function serializer({\n  rootSchema,\n  depSchemas,\n  fqdnTransformation = { paths: [], transformation: '$' },\n  customTransformation = '$',\n}: SerializerParams) {\n  const serialize = schemaSerializer(rootSchema, depSchemas, converters);\n\n  return {\n    toAmbassadorRequest(\n      userInputArgs: any[],\n      ignorePathsForKeyRenames: string[] = [],\n    ): Payload {\n      return omitBy(\n        serialize(\n          renameAllNestedKeys(\n            transformToRequestMessage(\n              userInputArgs,\n              customTransformation,\n              builtinCustomFunctions,\n            ),\n            {\n              _id: 'id',\n              _createdDate: 'createdDate',\n              _updatedDate: 'updatedDate',\n            },\n            ignorePathsForKeyRenames,\n          ),\n          ConverterType.TO_JSON,\n        ),\n        isUndefined,\n      );\n    },\n\n    fromJSON(json: Payload, ignorePathsForKeyRenames: string[] = []): Payload {\n      const deserialized = serialize(json, ConverterType.FROM_JSON);\n\n      const fqdnTransformed = transformFqdn(deserialized, fqdnTransformation);\n\n      const fqdnTransformedWithRenamedKeys = renameAllNestedKeys(\n        fqdnTransformed,\n        {\n          id: '_id',\n          createdDate: '_createdDate',\n          updatedDate: '_updatedDate',\n        },\n        ignorePathsForKeyRenames,\n      );\n\n      return transformResponseMessage(\n        fqdnTransformedWithRenamedKeys,\n        customTransformation,\n        builtinCustomFunctions,\n      );\n    },\n\n    toJSON(\n      veloPayload: Payload,\n      ignorePathsForKeyRenames: string[] = [],\n    ): Payload {\n      const deserialized = serialize(veloPayload, ConverterType.TO_JSON);\n\n      return renameAllNestedKeys(\n        transformToRequestMessage(\n          deserialized,\n          customTransformation,\n          builtinCustomFunctions,\n        ),\n        {\n          _id: 'id',\n          _createdDate: 'createdDate',\n          _updatedDate: 'updatedDate',\n        },\n        ignorePathsForKeyRenames,\n      );\n    },\n  };\n}\n"],"mappings":"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","ignoreList":[]}