{"version":3,"names":["_jsBase","require","flattenParams","data","path","params","Object","entries","forEach","key","value","isObject","Array","isArray","fieldPath","resolvePath","serializedObject","assign","toURLSearchParams","isComplexRequest","flatten","searchParams","reduce","urlSearchParams","keyParams","param","undefined","append","URLSearchParams","encode","JSON","stringify"],"sources":["../../src/flatten-params.ts"],"sourcesContent":["import { encode } from 'js-base64';\n\n// Flatten a nested object to params object { field: { text: 'foo' } } => { field.text ='foo' }\nfunction flattenParams(data: object, path = '') {\n  const params: any = {};\n\n  Object.entries(data).forEach(([key, value]) => {\n    const isObject =\n      value !== null && typeof value === 'object' && !Array.isArray(value);\n    const fieldPath = resolvePath(path, key);\n\n    if (isObject) {\n      const serializedObject = flattenParams(value, fieldPath);\n      Object.assign(params, serializedObject);\n    } else {\n      params[fieldPath] = value;\n    }\n  });\n\n  return params;\n}\n\nfunction resolvePath(path: string, key: string) {\n  return `${path}${path ? '.' : ''}${key}`;\n}\n\nexport function toURLSearchParams(params: any, isComplexRequest?: boolean) {\n  const flatten = flattenParams(params);\n\n  const searchParams = Object.entries(flatten).reduce(\n    (urlSearchParams, [key, value]) => {\n      // inorder to make `foo: [1,2]` turn into `foo=1&foo=2` and not `foo[]=1&foo[]=2`\n      const keyParams = Array.isArray(value) ? value : [value];\n\n      keyParams.forEach((param: any) => {\n        if (param === undefined || param === null) {\n          return;\n        }\n\n        urlSearchParams.append(key, param);\n      });\n\n      return urlSearchParams;\n    },\n    new URLSearchParams(),\n  );\n\n  // https://github.com/wix-private/server-infra/tree/master/framework/grpc/rest#complex-requests-messages-with-get-mappings\n  if (isComplexRequest) {\n    searchParams.append('.r', encode(JSON.stringify(params), true));\n  }\n\n  return searchParams;\n}\n"],"mappings":";;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAEA;AACA,SAASC,aAAaA,CAACC,IAAY,EAAEC,IAAI,GAAG,EAAE,EAAE;EAC9C,MAAMC,MAAW,GAAG,CAAC,CAAC;EAEtBC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAK;IAC7C,MAAMC,QAAQ,GACZD,KAAK,KAAK,IAAI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC;IACtE,MAAMI,SAAS,GAAGC,WAAW,CAACX,IAAI,EAAEK,GAAG,CAAC;IAExC,IAAIE,QAAQ,EAAE;MACZ,MAAMK,gBAAgB,GAAGd,aAAa,CAACQ,KAAK,EAAEI,SAAS,CAAC;MACxDR,MAAM,CAACW,MAAM,CAACZ,MAAM,EAAEW,gBAAgB,CAAC;IACzC,CAAC,MAAM;MACLX,MAAM,CAACS,SAAS,CAAC,GAAGJ,KAAK;IAC3B;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf;AAEA,SAASU,WAAWA,CAACX,IAAY,EAAEK,GAAW,EAAE;EAC9C,OAAO,GAAGL,IAAI,GAAGA,IAAI,GAAG,GAAG,GAAG,EAAE,GAAGK,GAAG,EAAE;AAC1C;AAEO,SAASS,iBAAiBA,CAACb,MAAW,EAAEc,gBAA0B,EAAE;EACzE,MAAMC,OAAO,GAAGlB,aAAa,CAACG,MAAM,CAAC;EAErC,MAAMgB,YAAY,GAAGf,MAAM,CAACC,OAAO,CAACa,OAAO,CAAC,CAACE,MAAM,CACjD,CAACC,eAAe,EAAE,CAACd,GAAG,EAAEC,KAAK,CAAC,KAAK;IACjC;IACA,MAAMc,SAAS,GAAGZ,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;IAExDc,SAAS,CAAChB,OAAO,CAAEiB,KAAU,IAAK;MAChC,IAAIA,KAAK,KAAKC,SAAS,IAAID,KAAK,KAAK,IAAI,EAAE;QACzC;MACF;MAEAF,eAAe,CAACI,MAAM,CAAClB,GAAG,EAAEgB,KAAK,CAAC;IACpC,CAAC,CAAC;IAEF,OAAOF,eAAe;EACxB,CAAC,EACD,IAAIK,eAAe,CAAC,CACtB,CAAC;;EAED;EACA,IAAIT,gBAAgB,EAAE;IACpBE,YAAY,CAACM,MAAM,CAAC,IAAI,EAAE,IAAAE,cAAM,EAACC,IAAI,CAACC,SAAS,CAAC1B,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC;EACjE;EAEA,OAAOgB,YAAY;AACrB","ignoreList":[]}