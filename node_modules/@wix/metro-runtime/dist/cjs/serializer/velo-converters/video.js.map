{"version":3,"names":["_querystring","_interopRequireDefault","require","_domain","_convertersUtils","WIX_VIDEO","video","exports","types","ConverterType","FROM_JSON","transform","val","_val$thumbnail","posterData","thumbnail","id","URL_HASH_PREFIX","width","height","url","TO_JSON","alignedVideo","alignIfLegacy","protocol","hash","pathname","URL","posterHeight","posterWidth","posterUri","querystring","parse","replace","split","WIX_PROTOCOL","Number","toString"],"sources":["../../../../src/serializer/velo-converters/video.ts"],"sourcesContent":["import querystring from 'querystring';\nimport type com from '../../proto';\nimport { ConverterSet, ConverterType } from '../domain';\nimport {\n  alignIfLegacy,\n  URL_HASH_PREFIX,\n  WIX_PROTOCOL,\n} from './converters-utils';\n\nconst WIX_VIDEO = 'video';\n\nexport const video: ConverterSet = {\n  types: ['wix.common.Video'],\n\n  [ConverterType.FROM_JSON]: {\n    transform: (val: com.wix.common.Video) => {\n      if (!val) {\n        return;\n      }\n\n      let posterData = '';\n      if (val.thumbnail?.id) {\n        posterData = `${URL_HASH_PREFIX}posterUri=${val.thumbnail.id}&posterWidth=${val.thumbnail.width}&posterHeight=${val.thumbnail.height}`;\n      }\n\n      return val.id ? `wix:video://v1/${val.id}${posterData}` : val.url;\n    },\n  },\n\n  [ConverterType.TO_JSON]: {\n    transform: (val: string): com.wix.common.Video | undefined => {\n      if (!val) {\n        return;\n      }\n\n      const alignedVideo = alignIfLegacy(val, WIX_VIDEO);\n\n      const { protocol, hash, pathname } = new URL(alignedVideo);\n      const {\n        posterHeight: height,\n        posterWidth: width,\n        posterUri,\n      } = querystring.parse(hash.replace(URL_HASH_PREFIX, ''));\n      const [id] = pathname.replace(`${WIX_VIDEO}://v1/`, '').split('/');\n\n      if (protocol === WIX_PROTOCOL) {\n        if (!posterUri) {\n          return { id };\n        }\n        return {\n          id,\n          thumbnail: {\n            height: Number(height),\n            width: Number(width),\n            id: posterUri.toString(),\n          },\n        };\n      }\n      return { url: val };\n    },\n  },\n};\n"],"mappings":";;;;;AAAA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,gBAAA,GAAAF,OAAA;AAMA,MAAMG,SAAS,GAAG,OAAO;AAElB,MAAMC,KAAmB,GAAAC,OAAA,CAAAD,KAAA,GAAG;EACjCE,KAAK,EAAE,CAAC,kBAAkB,CAAC;EAE3B,CAACC,qBAAa,CAACC,SAAS,GAAG;IACzBC,SAAS,EAAGC,GAAyB,IAAK;MAAA,IAAAC,cAAA;MACxC,IAAI,CAACD,GAAG,EAAE;QACR;MACF;MAEA,IAAIE,UAAU,GAAG,EAAE;MACnB,KAAAD,cAAA,GAAID,GAAG,CAACG,SAAS,aAAbF,cAAA,CAAeG,EAAE,EAAE;QACrBF,UAAU,GAAG,GAAGG,gCAAe,aAAaL,GAAG,CAACG,SAAS,CAACC,EAAE,gBAAgBJ,GAAG,CAACG,SAAS,CAACG,KAAK,iBAAiBN,GAAG,CAACG,SAAS,CAACI,MAAM,EAAE;MACxI;MAEA,OAAOP,GAAG,CAACI,EAAE,GAAG,kBAAkBJ,GAAG,CAACI,EAAE,GAAGF,UAAU,EAAE,GAAGF,GAAG,CAACQ,GAAG;IACnE;EACF,CAAC;EAED,CAACX,qBAAa,CAACY,OAAO,GAAG;IACvBV,SAAS,EAAGC,GAAW,IAAuC;MAC5D,IAAI,CAACA,GAAG,EAAE;QACR;MACF;MAEA,MAAMU,YAAY,GAAG,IAAAC,8BAAa,EAACX,GAAG,EAAEP,SAAS,CAAC;MAElD,MAAM;QAAEmB,QAAQ;QAAEC,IAAI;QAAEC;MAAS,CAAC,GAAG,IAAIC,GAAG,CAACL,YAAY,CAAC;MAC1D,MAAM;QACJM,YAAY,EAAET,MAAM;QACpBU,WAAW,EAAEX,KAAK;QAClBY;MACF,CAAC,GAAGC,oBAAW,CAACC,KAAK,CAACP,IAAI,CAACQ,OAAO,CAAChB,gCAAe,EAAE,EAAE,CAAC,CAAC;MACxD,MAAM,CAACD,EAAE,CAAC,GAAGU,QAAQ,CAACO,OAAO,CAAC,GAAG5B,SAAS,QAAQ,EAAE,EAAE,CAAC,CAAC6B,KAAK,CAAC,GAAG,CAAC;MAElE,IAAIV,QAAQ,KAAKW,6BAAY,EAAE;QAC7B,IAAI,CAACL,SAAS,EAAE;UACd,OAAO;YAAEd;UAAG,CAAC;QACf;QACA,OAAO;UACLA,EAAE;UACFD,SAAS,EAAE;YACTI,MAAM,EAAEiB,MAAM,CAACjB,MAAM,CAAC;YACtBD,KAAK,EAAEkB,MAAM,CAAClB,KAAK,CAAC;YACpBF,EAAE,EAAEc,SAAS,CAACO,QAAQ,CAAC;UACzB;QACF,CAAC;MACH;MACA,OAAO;QAAEjB,GAAG,EAAER;MAAI,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]}