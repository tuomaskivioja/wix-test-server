"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.video = void 0;
var _querystring = _interopRequireDefault(require("querystring"));
var _domain = require("../domain");
var _convertersUtils = require("./converters-utils");
const WIX_VIDEO = 'video';
const video = exports.video = {
  types: ['wix.common.Video'],
  [_domain.ConverterType.FROM_JSON]: {
    transform: val => {
      var _val$thumbnail;
      if (!val) {
        return;
      }
      let posterData = '';
      if ((_val$thumbnail = val.thumbnail) != null && _val$thumbnail.id) {
        posterData = `${_convertersUtils.URL_HASH_PREFIX}posterUri=${val.thumbnail.id}&posterWidth=${val.thumbnail.width}&posterHeight=${val.thumbnail.height}`;
      }
      return val.id ? `wix:video://v1/${val.id}${posterData}` : val.url;
    }
  },
  [_domain.ConverterType.TO_JSON]: {
    transform: val => {
      if (!val) {
        return;
      }
      const alignedVideo = (0, _convertersUtils.alignIfLegacy)(val, WIX_VIDEO);
      const {
        protocol,
        hash,
        pathname
      } = new URL(alignedVideo);
      const {
        posterHeight: height,
        posterWidth: width,
        posterUri
      } = _querystring.default.parse(hash.replace(_convertersUtils.URL_HASH_PREFIX, ''));
      const [id] = pathname.replace(`${WIX_VIDEO}://v1/`, '').split('/');
      if (protocol === _convertersUtils.WIX_PROTOCOL) {
        if (!posterUri) {
          return {
            id
          };
        }
        return {
          id,
          thumbnail: {
            height: Number(height),
            width: Number(width),
            id: posterUri.toString()
          }
        };
      }
      return {
        url: val
      };
    }
  }
};
//# sourceMappingURL=video.js.map