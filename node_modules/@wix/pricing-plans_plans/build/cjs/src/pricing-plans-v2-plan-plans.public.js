"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookIdentityType = exports.SortOrder = exports.PublicFilter = exports.PeriodUnit = exports.ArchivedFilter = exports.AppliedAt = exports.onPlanArchived = exports.onPlanBuyerCanCancelUpdated = exports.onPlanCreated = exports.onPlanUpdated = exports.archivePlan = exports.clearPrimary = exports.makePlanPrimary = exports.setPlanVisibility = exports.updatePlan = exports.createPlan = exports.getPlanStats = exports.listPlans = exports.getPlan = exports.queryPublicPlans = exports.listPublicPlans = exports.__metadata = void 0;
const rename_all_nested_keys_1 = require("@wix/sdk-runtime/rename-all-nested-keys");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const sdk_types_1 = require("@wix/sdk-types");
const pricing_plans_v2_plan_plans_universal_1 = require("./pricing-plans-v2-plan-plans.universal");
exports.__metadata = { PACKAGE_NAME: '@wix/pricing-plans' };
function listPublicPlans(httpClient) {
    return (options) => (0, pricing_plans_v2_plan_plans_universal_1.listPublicPlans)(options, 
    // @ts-ignore
    { httpClient });
}
exports.listPublicPlans = listPublicPlans;
function queryPublicPlans(httpClient) {
    return () => (0, pricing_plans_v2_plan_plans_universal_1.queryPublicPlans)(
    // @ts-ignore
    { httpClient });
}
exports.queryPublicPlans = queryPublicPlans;
function getPlan(httpClient) {
    return (_id) => (0, pricing_plans_v2_plan_plans_universal_1.getPlan)(_id, 
    // @ts-ignore
    { httpClient });
}
exports.getPlan = getPlan;
function listPlans(httpClient) {
    return (options) => (0, pricing_plans_v2_plan_plans_universal_1.listPlans)(options, 
    // @ts-ignore
    { httpClient });
}
exports.listPlans = listPlans;
function getPlanStats(httpClient) {
    return () => (0, pricing_plans_v2_plan_plans_universal_1.getPlanStats)(
    // @ts-ignore
    { httpClient });
}
exports.getPlanStats = getPlanStats;
function createPlan(httpClient) {
    return (plan) => (0, pricing_plans_v2_plan_plans_universal_1.createPlan)(plan, 
    // @ts-ignore
    { httpClient });
}
exports.createPlan = createPlan;
function updatePlan(httpClient) {
    return (_id, plan) => (0, pricing_plans_v2_plan_plans_universal_1.updatePlan)(_id, plan, 
    // @ts-ignore
    { httpClient });
}
exports.updatePlan = updatePlan;
function setPlanVisibility(httpClient) {
    return (_id, visible) => (0, pricing_plans_v2_plan_plans_universal_1.setPlanVisibility)(_id, visible, 
    // @ts-ignore
    { httpClient });
}
exports.setPlanVisibility = setPlanVisibility;
function makePlanPrimary(httpClient) {
    return (_id) => (0, pricing_plans_v2_plan_plans_universal_1.makePlanPrimary)(_id, 
    // @ts-ignore
    { httpClient });
}
exports.makePlanPrimary = makePlanPrimary;
function clearPrimary(httpClient) {
    return () => (0, pricing_plans_v2_plan_plans_universal_1.clearPrimary)(
    // @ts-ignore
    { httpClient });
}
exports.clearPrimary = clearPrimary;
function archivePlan(httpClient) {
    return (_id) => (0, pricing_plans_v2_plan_plans_universal_1.archivePlan)(_id, 
    // @ts-ignore
    { httpClient });
}
exports.archivePlan = archivePlan;
exports.onPlanUpdated = (0, sdk_types_1.EventDefinition)('wix.pricing_plans.plan_updated', true, (event) => (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(event, [
    {
        transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
exports.onPlanCreated = (0, sdk_types_1.EventDefinition)('wix.pricing_plans.plan_created', true, (event) => (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(event, [
    {
        transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'entity.createdDate' },
            { path: 'entity.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
exports.onPlanBuyerCanCancelUpdated = (0, sdk_types_1.EventDefinition)('wix.pricing_plans.plan_buyer_can_cancel_updated', true, (event) => (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(event, [
    {
        transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'data.plan.createdDate' },
            { path: 'data.plan.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
exports.onPlanArchived = (0, sdk_types_1.EventDefinition)('wix.pricing_plans.plan_plan_archived', true, (event) => (0, rename_all_nested_keys_1.renameKeysFromRESTResponseToSDKResponse)((0, transform_paths_1.transformPaths)(event, [
    {
        transformFn: timestamp_1.transformRESTTimestampToSDKTimestamp,
        paths: [
            { path: 'data.plan.createdDate' },
            { path: 'data.plan.updatedDate' },
            { path: 'metadata.eventTime' },
        ],
    },
])))();
var pricing_plans_v2_plan_plans_universal_2 = require("./pricing-plans-v2-plan-plans.universal");
Object.defineProperty(exports, "AppliedAt", { enumerable: true, get: function () { return pricing_plans_v2_plan_plans_universal_2.AppliedAt; } });
Object.defineProperty(exports, "ArchivedFilter", { enumerable: true, get: function () { return pricing_plans_v2_plan_plans_universal_2.ArchivedFilter; } });
Object.defineProperty(exports, "PeriodUnit", { enumerable: true, get: function () { return pricing_plans_v2_plan_plans_universal_2.PeriodUnit; } });
Object.defineProperty(exports, "PublicFilter", { enumerable: true, get: function () { return pricing_plans_v2_plan_plans_universal_2.PublicFilter; } });
Object.defineProperty(exports, "SortOrder", { enumerable: true, get: function () { return pricing_plans_v2_plan_plans_universal_2.SortOrder; } });
Object.defineProperty(exports, "WebhookIdentityType", { enumerable: true, get: function () { return pricing_plans_v2_plan_plans_universal_2.WebhookIdentityType; } });
//# sourceMappingURL=pricing-plans-v2-plan-plans.public.js.map