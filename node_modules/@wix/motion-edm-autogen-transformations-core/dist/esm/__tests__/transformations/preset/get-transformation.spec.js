import { aString } from '@wix/motion-runtime-test-context';
import { times } from 'lodash';
import { preset } from '../../..';
const { get: { buildRequestTransformation, buildResponseTransformation }, } = preset;
describe('get-method transformations', () => {
    describe('buildRequestTransformation', () => {
        const requestMessageIdentifierPath = aString();
        test('creates a transformation that maps the first argument into requestMessageIdentifierPath', () => {
            const transformationObject = buildRequestTransformation({
                requestMessageIdentifierPath,
            });
            expect(transformationObject).toStrictEqual({
                [requestMessageIdentifierPath]: '$[0]',
            });
        });
        test('supports a nested path', () => {
            // @ts-expect-errora
            const idPathSegments = times(2, aString);
            const transformationObject = buildRequestTransformation({
                requestMessageIdentifierPath: idPathSegments.join('.'),
            });
            expect(transformationObject).toStrictEqual({
                [idPathSegments[0]]: { [idPathSegments[1]]: '$[0]' },
            });
        });
    });
    describe('buildResponseTransformation', () => {
        test('unwraps the value of the provided property-path', () => {
            const responseMessageResultPath = aString();
            const transformationString = buildResponseTransformation({
                responseMessageResultPath,
            });
            expect(transformationString).toStrictEqual(`$.${responseMessageResultPath}`);
        });
    });
});
//# sourceMappingURL=get-transformation.spec.js.map