"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.not = exports.or = exports.and = exports.isNotOperator = exports.isOrOperator = exports.isAndOperator = exports.isLogicalOperator = void 0;
function isLogicalOperator(filter) {
    return isAndOperator(filter) || isOrOperator(filter) || isNotOperator(filter);
}
exports.isLogicalOperator = isLogicalOperator;
function isAndOperator(filter) {
    return (Object.keys(filter).length === 1 &&
        '$and' in filter &&
        Array.isArray(filter.$and));
}
exports.isAndOperator = isAndOperator;
function isOrOperator(filter) {
    return (Object.keys(filter).length === 1 &&
        '$or' in filter &&
        Array.isArray(filter.$or));
}
exports.isOrOperator = isOrOperator;
function isNotOperator(filter) {
    return (Object.keys(filter).length === 1 &&
        '$not' in filter &&
        typeof filter.$not === 'object');
}
exports.isNotOperator = isNotOperator;
function and(a, b) {
    if (typeof a === 'undefined' || Object.keys(a).length === 0) {
        return b;
    }
    else if (typeof b === 'undefined' || Object.keys(b).length === 0) {
        return a;
    }
    else {
        return {
            $and: [
                ...(isAndOperator(a) ? a.$and : [a]),
                ...(isAndOperator(b) ? b.$and : [b]),
            ],
        };
    }
}
exports.and = and;
function or(a, b) {
    if (typeof a === 'undefined' || Object.keys(a).length === 0) {
        return b;
    }
    else if (typeof b === 'undefined' || Object.keys(b).length === 0) {
        return a;
    }
    else {
        return {
            $or: [
                ...(isOrOperator(a) ? a.$or : [a]),
                ...(isOrOperator(b) ? b.$or : [b]),
            ],
        };
    }
}
exports.or = or;
function not(a) {
    if (typeof a === 'undefined' || Object.keys(a).length === 0) {
        return undefined;
    }
    else if (isNotOperator(a)) {
        return a.$not;
    }
    else {
        return { $not: a };
    }
}
exports.not = not;
