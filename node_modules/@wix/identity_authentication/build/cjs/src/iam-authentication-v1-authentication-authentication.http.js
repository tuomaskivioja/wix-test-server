"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logout = exports.signOn = exports.proceedToNextState = exports.loginWithIdpConnectionTokenParams = exports.changePassword = exports.loginV2 = exports.registerV2 = exports.login = exports.register = void 0;
const metro_runtime_1 = require("@wix/metro-runtime");
const float_1 = require("@wix/sdk-runtime/transformations/float");
const float_2 = require("@wix/sdk-runtime/transformations/float");
const bytes_1 = require("@wix/sdk-runtime/transformations/bytes");
const timestamp_1 = require("@wix/sdk-runtime/transformations/timestamp");
const timestamp_2 = require("@wix/sdk-runtime/transformations/timestamp");
const transform_paths_1 = require("@wix/sdk-runtime/transformations/transform-paths");
const metro_runtime_2 = require("@wix/metro-runtime");
function resolveWixIamAuthenticationV1AuthenticationServiceUrl(opts) {
    const domainToMappings = {
        _: [
            {
                srcPath: '/_api/iam/authentication',
                destPath: '',
            },
        ],
        'users._base_domain_': [
            {
                srcPath: '/iam/wix/google',
                destPath: '/v1/sso/callback/root/0e6a50f5-b523-4e29-990d-f37fa2ffdd69',
            },
            {
                srcPath: '/authentication',
                destPath: '',
            },
        ],
        'www.wixapis.com': [
            {
                srcPath: '/_api/iam/authentication',
                destPath: '',
            },
        ],
        'bo._base_domain_': [
            {
                srcPath: '/_api/iam/authentication',
                destPath: '',
            },
        ],
        'wixbo.ai': [
            {
                srcPath: '/_api/iam/authentication',
                destPath: '',
            },
        ],
        'dev._base_domain_': [
            {
                srcPath: '/_api/iam/authentication',
                destPath: '',
            },
        ],
        'manage._base_domain_': [
            {
                srcPath: '/_api/authentication',
                destPath: '',
            },
        ],
        'www._base_domain_': [
            {
                srcPath: '/_api/iam/authentication',
                destPath: '',
            },
        ],
    };
    return (0, metro_runtime_2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
function register(payload) {
    function __register({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [
                    { path: 'identity.createdDate' },
                    { path: 'identity.updatedDate' },
                    { path: 'identity.identityProfile.customFields.value.dateValue' },
                ],
            },
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [
                    { path: 'identity.identityProfile.customFields.value.numValue' },
                ],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.Register',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v1/register',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                        { path: 'additionalData.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                        { path: 'additionalData.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __register;
}
exports.register = register;
function login(payload) {
    function __login({ host }) {
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.Login',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v1/login',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                        { path: 'additionalData.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                        { path: 'additionalData.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __login;
}
exports.login = login;
/**
 * Registers a new member.
 *
 * Typically, after a sucessful registration, you generate and use member tokens for the
 * registered member so that subsequent API calls are called as part of a member session.
 *
 * If the email used to register the member already exists as a contact email, the registering
 * member need to verify the email address using a code that is sent to the address.
 */
function registerV2(payload) {
    function __registerV2({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [{ path: 'profile.customFields.value.numValue' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'profile.customFields.value.dateValue' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.RegisterV2',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v2/register',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                        { path: 'additionalData.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                        { path: 'additionalData.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __registerV2;
}
exports.registerV2 = registerV2;
/**
 * Logs in an existing user.
 *
 * Typically, after a sucessful login, you generate and use member tokens for the
 * logged-in member so that subsequent API calls are called as part of a member session.
 */
function loginV2(payload) {
    function __loginV2({ host }) {
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.LoginV2',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v2/login',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                        { path: 'additionalData.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                        { path: 'additionalData.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __loginV2;
}
exports.loginV2 = loginV2;
/** Changes the password of a logged in user. */
function changePassword(payload) {
    function __changePassword({ host }) {
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.ChangePassword',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v2/change-password',
                data: payload,
                host,
            }),
            data: payload,
        };
        return metadata;
    }
    return __changePassword;
}
exports.changePassword = changePassword;
function loginWithIdpConnectionTokenParams(payload) {
    function __loginWithIdpConnectionTokenParams({ host }) {
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.LoginWithIdpConnectionTokenParams',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v1/sso/login-with-token-params',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                        { path: 'additionalData.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                        { path: 'additionalData.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __loginWithIdpConnectionTokenParams;
}
exports.loginWithIdpConnectionTokenParams = loginWithIdpConnectionTokenParams;
function proceedToNextState(payload) {
    function __proceedToNextState({ host }) {
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.ProceedToNextState',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v1/state/proceed',
                data: payload,
                host,
            }),
            data: payload,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                        { path: 'additionalData.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                        { path: 'additionalData.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __proceedToNextState;
}
exports.proceedToNextState = proceedToNextState;
function signOn(payload) {
    function __signOn({ host }) {
        const serializedData = (0, transform_paths_1.transformPaths)(payload, [
            {
                transformFn: float_1.transformSDKFloatToRESTFloat,
                paths: [{ path: 'profile.customFields.value.numValue' }],
            },
            {
                transformFn: timestamp_1.transformSDKTimestampToRESTTimestamp,
                paths: [{ path: 'profile.customFields.value.dateValue' }],
            },
        ]);
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'POST',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.SignOn',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v2/sign-on',
                data: serializedData,
                host,
            }),
            data: serializedData,
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: timestamp_2.transformRESTTimestampToSDKTimestamp,
                    paths: [
                        { path: 'identity.createdDate' },
                        { path: 'identity.updatedDate' },
                        { path: 'identity.identityProfile.customFields.value.dateValue' },
                    ],
                },
                {
                    transformFn: float_2.transformRESTFloatToSDKFloat,
                    paths: [
                        { path: 'identity.identityProfile.customFields.value.numValue' },
                    ],
                },
            ]),
        };
        return metadata;
    }
    return __signOn;
}
exports.signOn = signOn;
/** Logs out a member. */
function logout(payload) {
    function __logout({ host }) {
        const metadata = {
            entityFqdn: 'wix.iam.authentication.v1.authentication',
            method: 'GET',
            methodFqn: 'wix.iam.authentication.v1.AuthenticationService.Logout',
            url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
                protoPath: '/v1/logout',
                data: payload,
                host,
            }),
            params: (0, metro_runtime_1.toURLSearchParams)(payload),
            transformResponse: (payload) => (0, transform_paths_1.transformPaths)(payload, [
                {
                    transformFn: bytes_1.transformRESTBytesToSDKBytes,
                    paths: [{ path: 'body' }],
                },
            ]),
        };
        return metadata;
    }
    return __logout;
}
exports.logout = logout;
