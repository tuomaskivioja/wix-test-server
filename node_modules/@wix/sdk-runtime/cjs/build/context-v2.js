"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServicePluginDefinition = exports.EventDefinition = void 0;
exports.contextualizeHostModuleV2 = contextualizeHostModuleV2;
exports.contextualizeRESTModuleV2 = contextualizeRESTModuleV2;
exports.contextualizeEventDefinitionModuleV2 = contextualizeEventDefinitionModuleV2;
exports.contextualizeSerivcePluginModuleV2 = contextualizeSerivcePluginModuleV2;
const sdk_types_1 = require("@wix/sdk-types");
Object.defineProperty(exports, "EventDefinition", { enumerable: true, get: function () { return sdk_types_1.EventDefinition; } });
Object.defineProperty(exports, "ServicePluginDefinition", { enumerable: true, get: function () { return sdk_types_1.ServicePluginDefinition; } });
const context_js_1 = require("./context.js");
function contextualizeHostModuleV2(hostModule, props) {
    return {
        ...hostModule,
        ...Object.fromEntries(props.map((prop) => [
            prop,
            (...args) => {
                const context = (0, context_js_1.resolveContext)();
                if (!context) {
                    throw new Error('Wix context is not available. Make sure to initialize the Wix context before using SDK modules');
                }
                return context
                    .initWixModules(hostModule)[prop].apply(undefined, args);
            },
        ])),
    };
}
function contextualizeRESTModuleV2(restModule, elevated) {
    return ((...args) => {
        const context = (0, context_js_1.resolveContext)();
        if (!context) {
            // @ts-expect-error - if there is no context, we want to behave like the original module
            return restModule.apply(undefined, args);
        }
        return (context
            .initWixModules(restModule, elevated)
            // @ts-expect-error - we know the args here are meant to be passed to the initalized module
            .apply(undefined, args));
    });
}
function contextualizeEventDefinitionModuleV2(eventDefinition) {
    const contextualMethod = ((...args) => {
        const context = (0, context_js_1.resolveContext)();
        if (!context) {
            // this line should throw, but this would be a breaking change for older SDK versions
            // this is because in wixClient there's code that calls any function it detects and checks
            // if it's an ambassador module (see isAmbassadorModule)
            return () => { };
        }
        return context.initWixModules(eventDefinition).apply(undefined, args);
    });
    contextualMethod.__type = eventDefinition.__type;
    contextualMethod.type = eventDefinition.type;
    contextualMethod.isDomainEvent = eventDefinition.isDomainEvent;
    contextualMethod.transformations = eventDefinition.transformations;
    return contextualMethod;
}
function contextualizeSerivcePluginModuleV2(servicePlugin) {
    const contextualMethod = ((...args) => {
        const context = (0, context_js_1.resolveContext)();
        if (!context) {
            // this line should throw, but this would be a breaking change for older SDK versions
            // this is because in wixClient there's code that calls any function it detects and checks
            // if it's an ambassador module (see isAmbassadorModule)
            return () => { };
        }
        return context.initWixModules(servicePlugin).apply(undefined, args);
    });
    contextualMethod.__type = servicePlugin.__type;
    contextualMethod.componentType = servicePlugin.componentType;
    contextualMethod.methods = servicePlugin.methods;
    return contextualMethod;
}
